import unittest
from lexer import main

main_test_result = [
    ('IDENTIFIER', 'import'),
    ('SINGLE_QUOTE', "'"),
    ('IDENTIFIER', 'package'),
    ('COLON', ':'),
    ('IDENTIFIER', 'app'),
    ('SLASH', '/'),
    ('IDENTIFIER', 'screens'),
    ('SLASH', '/'),
    ('IDENTIFIER', 'index'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'dart'),
    ('SINGLE_QUOTE', "'"),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'import'),
    ('SINGLE_QUOTE', "'"),
    ('IDENTIFIER', 'package'),
    ('COLON', ':'),
    ('IDENTIFIER', 'flutter'),
    ('SLASH', '/'),
    ('IDENTIFIER', 'material'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'dart'),
    ('SINGLE_QUOTE', "'"),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'void'),
    ('IDENTIFIER', 'main'),
    ('SYMBOL', '('),
    ('SYMBOL', ')'),
    ('SYMBOL', '{'),
    ('IDENTIFIER', 'runApp'),
    ('SYMBOL', '('),
    ('IDENTIFIER', 'const'),
    ('IDENTIFIER', 'MainApp'),
    ('SYMBOL', '('),
    ('SYMBOL', ')'),
    ('SYMBOL', ')'),
    ('SYMBOL', ';'),
    ('SYMBOL', '}'),
    ('IDENTIFIER', 'class'),
    ('IDENTIFIER', 'MainApp'),
    ('IDENTIFIER', 'extends'),
    ('IDENTIFIER', 'StatelessWidget'),
    ('SYMBOL', '{'),
    ('IDENTIFIER', 'const'),
    ('IDENTIFIER', 'MainApp'),
    ('SYMBOL', '('),
    ('SYMBOL', '{'),
    ('IDENTIFIER', 'super'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'key'),
    ('SYMBOL', '}'),
    ('SYMBOL', ')'),
    ('SYMBOL', ';'),
    ('AT', '@'),
    ('IDENTIFIER', 'override'),
    ('IDENTIFIER', 'Widget'),
    ('IDENTIFIER', 'build'),
    ('SYMBOL', '('),
    ('IDENTIFIER', 'BuildContext'),
    ('IDENTIFIER', 'context'),
    ('SYMBOL', ')'),
    ('SYMBOL', '{'),
    ('IDENTIFIER', 'return'),
    ('IDENTIFIER', 'const'),
    ('IDENTIFIER', 'MaterialApp'),
    ('SYMBOL', '('),
    ('IDENTIFIER', 'debugShowCheckedModeBanner'),
    ('COLON', ':'),
    ('IDENTIFIER', 'false'),
    ('SYMBOL', ','),
    ('IDENTIFIER', 'home'),
    ('COLON', ':'),
    ('IDENTIFIER', 'Index'),
    ('SYMBOL', '('),
    ('SYMBOL', ')'),
    ('SYMBOL', ','),
    ('SYMBOL', ')'),
    ('SYMBOL', ';'),
    ('SYMBOL', '}'),
    ('SYMBOL', '}'),
]

types_product_result = [
    ('IDENTIFIER', 'class'),
    ('IDENTIFIER', 'Product'),
    ('SYMBOL', '{'),
    ('IDENTIFIER', 'final'),
    ('TYPE', 'int'),
    ('QUESTION_MARK', '?'),
    ('IDENTIFIER', 'id'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'final'),
    ('TYPE', 'String'),
    ('IDENTIFIER', 'name'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'final'),
    ('TYPE', 'double'),
    ('IDENTIFIER', 'price'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'final'),
    ('TYPE', 'double'),
    ('IDENTIFIER', 'stock'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'final'),
    ('TYPE', 'String'),
    ('IDENTIFIER', 'description'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'final'),
    ('TYPE', 'String'),
    ('IDENTIFIER', 'measurement'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'const'),
    ('IDENTIFIER', 'Product'),
    ('SYMBOL', '('),
    ('SYMBOL', '{'),
    ('IDENTIFIER', 'this'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'id'),
    ('SYMBOL', ','),
    ('IDENTIFIER', 'required'),
    ('IDENTIFIER', 'this'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'name'),
    ('SYMBOL', ','),
    ('IDENTIFIER', 'required'),
    ('IDENTIFIER', 'this'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'price'),
    ('SYMBOL', ','),
    ('IDENTIFIER', 'required'),
    ('IDENTIFIER', 'this'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'stock'),
    ('SYMBOL', ','),
    ('IDENTIFIER', 'required'),
    ('IDENTIFIER', 'this'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'description'),
    ('SYMBOL', ','),
    ('IDENTIFIER', 'required'),
    ('IDENTIFIER', 'this'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'measurement'),
    ('SYMBOL', '}'),
    ('SYMBOL', ')'),
    ('SYMBOL', ';'),
    ('SYMBOL', '}'),
]

constants_color_result = [
    ('IDENTIFIER', 'import'),
    ('SINGLE_QUOTE', "'"),
    ('IDENTIFIER', 'package'),
    ('COLON', ':'),
    ('IDENTIFIER', 'flutter'),
    ('SLASH', '/'),
    ('IDENTIFIER', 'material'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'dart'),
    ('SINGLE_QUOTE', "'"),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'const'),
    ('IDENTIFIER', 'greenColor'),
    ('EQUALS', '='),
    ('TYPE', 'Color'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'fromRGBO'),
    ('SYMBOL', '('),
    ('NUMBER', 152),
    ('SYMBOL', ','),
    ('NUMBER', 161),
    ('SYMBOL', ','),
    ('NUMBER', 36),
    ('SYMBOL', ','),
    ('NUMBER', 1),
    ('SYMBOL', ')'),
    ('SYMBOL', ';'),
    ('IDENTIFIER', 'const'),
    ('IDENTIFIER', 'grayColor'),
    ('EQUALS', '='),
    ('TYPE', 'Color'),
    ('SYMBOL', '.'),
    ('IDENTIFIER', 'fromRGBO'),
    ('SYMBOL', '('),
    ('NUMBER', 170),
    ('SYMBOL', ','),
    ('NUMBER', 170),
    ('SYMBOL', ','),
    ('NUMBER', 170),
    ('SYMBOL', ','),
    ('NUMBER', 1),
    ('SYMBOL', ')'),
    ('SYMBOL', ';'),
]


class TestLexer(unittest.TestCase):

    def test_main_file(self):
        file = 'lib/main.dart'
        result = main(file)
        self.assertEqual(result, main_test_result)

    def test_types_product_file(self):
        file = 'lib/types/product.dart'
        result = main(file)
        self.assertEqual(result, types_product_result)

    def test_constants_color_file(self):
        file = 'lib/constants/color.dart'
        result = main(file)
        self.assertEqual(result, constants_color_result)
